name: Python Default CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  python_version: 3.13

jobs:
  codeqa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python-version }}
      - id: install_dependencies
        run: |
          pipx install poetry
          poetry check
          poetry install
      - name: Run formatter
        run: |
          mkdir format-logs
          poetry run task format-ci > format-logs/ruff-lint.log
      - name: Upload formatter logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: formatter-log
          path: format-logs
      - name: Run linter
        run: |
          mkdir linter-logs
          poetry run task check-ci > linter-logs/ruff-lint.log
      - name: Upload linter logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: linter-log
          path: linter-logs
      - name: Run type checker
        run: |
          mkdir mypy-logs
          poetry run task mypy > mypy-logs/mypy-log.log
      - name: Upload mypy logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: mypy-log
          path: mypy-logs

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python-version }}
      - id: install_dependencies
        run: |
          pipx install poetry
          poetry check
          poetry install
      - id: run_tests
        run: poetry run python -m pytest --cov . --cov-report xml
      - name: Upload test coverage xml as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: coverage.xml